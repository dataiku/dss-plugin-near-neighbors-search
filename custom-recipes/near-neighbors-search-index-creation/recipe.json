{
    "meta": {
    "label": "Nearest Neighbor Indexing",
    "description": "Build and store indices required to search for nearest neighbors",
    "icon": "icon-barcode"
    },

    "kind": "PYTHON",
    "inputRoles": [
        {
            "name": "input_dataset",
            "label": "Input dataset",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],
    "outputRoles": [
        {
            "name": "output_folder",
            "label": "Output folder",
            "description": "Folder to store the trained index",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": false,
            "acceptsManagedFolder": true,
            "mustBeStrictlyType": "Filesystem"
        }
    ],
    "params": [
        {
            "name": "separator_input",
            "label": "Input parameters",
            "type": "SEPARATOR"
        },
        {
            "name": "unique_id",
            "type": "COLUMN",
            "columnRole":"input_dataset",
            "label": "Unique ID",
           "description": "Column that uniquely identifies each row",
            "mandatory": true
        },
        {
            "name": "embedding_column",
            "type": "COLUMN",
            "columnRole":"input_dataset",
            "description": "Embedding (vector) representation of each element.",
            "label": "Embedding column",
            "allowedColumnTypes": ["vector", "string"],
            "mandatory": true
        },
        {
            "name": "separator_modeling",
            "label":"Modeling parameters",
            "type": "SEPARATOR"
        },
        {
            "name": "model",
            "type": "SELECT",
            "selectChoices": [
                {
                    "label": "Annoy (Spotify)",
                    "value": "annoy"
                },
                {
                    "label": "FAISS (Facebook)",
                    "value": "faiss"
                }
            ],
            "mandatory": true
        },
        {
            "name": "separator_advanced",
            "label": "Advanced",
            "type": "SEPARATOR"
        },
        {
            "name": "annoy_metric",
            "label": "Distance metric",
            "type": "SELECT",
            "selectChoices": [
                { "label": "angular", "value": "angular" },
                { "label": "euclidean", "value": "euclidean" },
                { "label": "manhattan", "value": "manhattan" },
                { "label": "hamming", "value": "hamming" },
                { "label": "dot", "value": "dot" }
            ],
            "defaultValue": "angular",
            "visibilityCondition": "model.model == 'annoy'"
        },
        {
            "name": "annoy_n_trees",
            "type": "INT",
            "defaultValue" : 10,
            "minI":1,
            "description": "",
            "label": "Number of trees",
            "visibilityCondition": "model.model == 'annoy'"
        },
        {
            "name": "faiss_index",
            "label": "FAISS index type",
            "type": "SELECT",
            "selectChoices": [
                { "label": "IndexFlatL2", "value": "IndexFlatL2" },
                { "label": "IndexFlatIP", "value": "IndexFlatIP" },
                { "label": "IndexLSH", "value": "IndexLSH" }
            ],
            "defaultValue": "IndexFlatL2",
            "visibilityCondition": "model.model == 'faiss'"
        },
        {
            "name": "faiss_lsh_n_bits",
            "type": "INT",
            "defaultValue" : 4,
            "minI":4,
            "description": "",
            "label": "Number of LSH bits",
            "visibilityCondition": "model.model == 'faiss' && model.faiss_index=='IndexLSH'"
        }
    ],
    "resourceKeys": []
}